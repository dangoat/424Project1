
<!DOCTYPE html>
<html>
<head>
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-alpha.6/css/bootstrap.min.css" integrity="sha384-rwoIResjU2yc3z8GV/NPeZWAv56rSmLldC3R/AZzGRnGxQQKnKkoFVhFQhNUwEyJ" crossorigin="anonymous">
  <meta name="viewport" content="initial-scale=1.0, user-scalable=no">
  <meta charset="utf-8">
  <title>Reader</title>
  <style>
      /* /* https://developers.google.com/maps/documentation/javascript/examples/places-searchbox
       * Always set the map height explicitly to define the size of the div
       * element that contains the map. */
       #map {
        height: 100%;
      }
      /* Optional: Makes the sample page fill the window. */
      html, body {
        height: 100%;
        margin: 0;
        padding: 0;
      }
      #description {
        font-family: Roboto;
        font-size: 15px;
        font-weight: 300;
      }

      #infowindow-content .title {
        font-weight: bold;
      }

      #infowindow-content {
        display: none;
      }

      #map #infowindow-content {
        display: inline;
      }

      .pac-card {
        margin: 10px 10px 0 0;
        border-radius: 2px 0 0 2px;
        box-sizing: border-box;
        -moz-box-sizing: border-box;
        outline: none;
        box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);
        background-color: #fff;
        font-family: Roboto;
      }

      #pac-container {
        padding-bottom: 12px;
        margin-right: 12px;
      }

      .pac-controls {
        display: inline-block;
        padding: 5px 11px;
      }

      .pac-controls label {
        font-family: Roboto;
        font-size: 13px;
        font-weight: 300;
      }

      #pac-input {
        background-color: #fff;
        font-family: Roboto;
        font-size: 15px;
        font-weight: 300;
        margin-left: 12px;
        padding: 0 11px 0 13px;
        text-overflow: ellipsis;
        width: 400px;
      }

      #pac-input:focus {
        border-color: #4d90fe;
      }

      #title {
        color: #fff;
        background-color: #4d90fe;
        font-size: 25px;
        font-weight: 500;
        padding: 6px 12px;
      }
      #target {
        width: 345px;
      }
    </style>
  </head>
  <body>

    <div class="jumbotron bg-info">
      <h1>Reader</h1> 
    </div>

    <form action="/findStories" method="POST">
      <input type="hidden" id="lat" name="lat"/>
      <input type="hidden" id="long" name="long"/>

      <div class="container">
        <div class="row" style="height: 30em">
          <div class="col-lg">
            <input id="pac-input" class="controls" type="text" placeholder="Search Box">
            <div id="map"></div>
            <script>
            // This example adds a search box to a map, using the Google Place Autocomplete
            // feature. People can enter geographical searches. The search box will return a
            // pick list containing a mix of places and predicted search terms.

            // This example requires the Places library. Include the libraries=places
            // parameter when you first load the API. For example:
            // <script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places">

            function initAutocomplete() {
              var myLatlng = {lat: 39.2904, lng: -76.6122}
              document.getElementById('lat').value = myLatlng['lat'];
              document.getElementById('long').value = myLatlng['lng'];
              var map = new google.maps.Map(document.getElementById('map'), {
                center: myLatlng,
                zoom: 13,
                mapTypeId: 'roadmap'
              });

              var icon = {
                size: new google.maps.Size(71, 71),
                origin: new google.maps.Point(0, 0),
                anchor: new google.maps.Point(17, 34),
                scaledSize: new google.maps.Size(25, 25)
              };

              var marker = new google.maps.Marker({
                map: map,
                position: myLatlng,
                draggable: true,
                title: myLatlng.lat.toFixed(3).toString() + ', ' + myLatlng.lng.toFixed(3).toString()
              });

              // Create the search box and link it to the UI element.
              var input = document.getElementById('pac-input');
              var searchBox = new google.maps.places.SearchBox(input);
              map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);

              // Bias the SearchBox results towards current map's viewport.
              map.addListener('bounds_changed', function() {
                searchBox.setBounds(map.getBounds());
              });

              marker.addListener('dragend', function() {
                var lat = marker.getPosition().lat();
                var lng = marker.getPosition().lng();
                var cur = {lat:lat, lng:lng};
                document.getElementById('lat').value = lat;
                document.getElementById('long').value = lng;
                marker.setTitle(lat.toFixed(3).toString() + ', ' + lng.toFixed(3).toString());
              });

              //var markers = [];
              // Listen for the event fired when the user selects a prediction and retrieve
              // more details for that place.
              searchBox.addListener('places_changed', function() {
                var places = searchBox.getPlaces();

                if (places.length == 0) {
                  return;
                }

                // Clear out the old markers.
                /*markers.forEach(function(marker) {
                  marker.setMap(null);
                });
                markers = [];*/

                // For each place, get the icon, name and location.
                var bounds = new google.maps.LatLngBounds();
                places.forEach(function(place) {
                  if (!place.geometry) {
                    console.log("Returned place contains no geometry");
                    return;
                  }
                  
                  marker.setPosition(place.geometry.location);
                  var lat = marker.getPosition().lat();
                  var lng = marker.getPosition().lng();
                  var cur = {lat:lat, lng:lng};
                  document.getElementById('lat').value = lat;
                  document.getElementById('long').value = lng;

                  marker.setTitle(lat.toFixed(3).toString() + ', ' + lng.toFixed(3).toString());
                  /*var lat = marker.getPosition().lat().toString();
                  marker.setTitle(lat);*/
                  // Create a marker for each place.
                  /*markers.push(new google.maps.Marker({
                    map: map,
                    icon: icon,
                    title: place.name,
                    position: place.geometry.location
                  }));*/

                  if (place.geometry.viewport) {
                    // Only geocodes have viewport.
                    bounds.union(place.geometry.viewport);
                  } else {
                    bounds.extend(place.geometry.location);
                  }
                });
                map.fitBounds(bounds);
              });
            }

          </script>
          <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyA1gp0ei-MhgYtXkujaXY3RqWY8Fric0rg&libraries=places&callback=initAutocomplete"
          async defer></script>
        </div>
        <div class="col-lg">
          <h2>Stories</h2>
          

          <div class="form-group">
              <label for="exampleFormControlSelect2">Select Categories:</label>
              <select multiple class="form-control" id="categories" name="categories" required>
                <% if (typeof categories != 'undefined'){ %>
                <% categories.forEach((category) => { %>
                <option value=<%= category %>><%= category %></option>
                <% })} %>
              </select>
          </div>

          <input class="btn btn-primary-inline" type="submit" value="Search">
          <br>
          <% if (typeof posts != 'undefined'){ %>
          <h2>Results:</h2>
          <ul class="list-group">
            <% posts.forEach((post) => { %>
              <li class="list-group-item" style="display: block">
                <div><h4><%= post.name %></h4></div>
                <p>Category: <%= post.category %></p> <br>
                <img src=<%= post.media %> alt="No Image" style="max-width: 500px; height: auto;"> <br>
                <p><%= post.description %></p>
              </li>
            <% }) %>
          </ul>
          <% } %>
        </div>
        
      </div>
    </div>
  </form>

  <script src="https://code.jquery.com/jquery-3.1.1.slim.min.js" integrity="sha384-A7FZj7v+d/sdmMqp/nOQwliLvUsJfDHW+k9Omg/a/EheAdgtzNs3hpfag6Ed950n" crossorigin="anonymous"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/tether/1.4.0/js/tether.min.js" integrity="sha384-DztdAPBWPRXSA/3eYEEUWrWCy7G5KFbe8fFjk5JAIxUYHKkDx6Qin1DkWx51bBrb" crossorigin="anonymous"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-alpha.6/js/bootstrap.min.js" integrity="sha384-vBWWzlZJ8ea9aCX4pEW3rVHjgjt7zpkNpZk+02D9phzyeVkE+jo0ieGizqPLForn" crossorigin="anonymous"></script>
</body>
</html>